{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:3000';\nconst api = axios.create({\n  baseURL: BASE_URL\n});\nexport const getUser = async username => {\n  try {\n    const response = await api.get(`/users/${username}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createUser = async username => {\n  try {\n    const response = await api.get(`/create`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const searchMovies = async (query, page, pageSize) => {\n  try {\n    const response = await api.get(`/movies/search?q=${query}&page=${page}&pageSize=${pageSize}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchAllMovies = async (page, pageSize) => {\n  try {\n    const response = await api.get(`/movies/?page=${page}&pageSize=${pageSize}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addToWatchlist = async (userId, movieId) => {\n  try {\n    const response = await api.post(`/movies/watchlist/${userId}`, {\n      movieId\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getWatchlist = async userId => {\n  try {\n    const response = await api.get(`/movies/watchlist/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addToWatched = async (userId, movieId) => {\n  try {\n    const response = await api.post(`/movies/watched/${userId}`, {\n      movieId\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getWatchedMovies = async userId => {\n  try {\n    const response = await api.get(`/movies/watched/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const rateMovie = async (userId, movieId, rating) => {\n  try {\n    const response = await api.post(`/movies/rate/${userId}`, {\n      movieId,\n      rating\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getRatings = async userId => {\n  try {\n    const response = await api.get(`/movies/rate/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","getUser","username","response","get","data","error","createUser","searchMovies","query","page","pageSize","fetchAllMovies","addToWatchlist","userId","movieId","post","getWatchlist","addToWatched","getWatchedMovies","rateMovie","rating","getRatings"],"sources":["Z:/movie-buff/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:3000';\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nexport const getUser = async (username) => {\r\n  try {\r\n    const response = await api.get(`/users/${username}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createUser = async (username, ) => {\r\n  try {\r\n    const response = await api.get(`/create`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const searchMovies = async (query, page, pageSize) => {\r\n  try {\r\n    const response = await api.get(`/movies/search?q=${query}&page=${page}&pageSize=${pageSize}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchAllMovies = async (page, pageSize) => {\r\n  try {\r\n    const response = await api.get(`/movies/?page=${page}&pageSize=${pageSize}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addToWatchlist = async (userId, movieId) => {\r\n  try {\r\n    const response = await api.post(`/movies/watchlist/${userId}`,{movieId});\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getWatchlist = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/movies/watchlist/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addToWatched = async (userId, movieId) => {\r\n  try {\r\n    const response = await api.post(`/movies/watched/${userId}`,{movieId});\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getWatchedMovies = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/movies/watched/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const rateMovie = async (userId, movieId, rating) => {\r\n  try {\r\n    const response = await api.post(`/movies/rate/${userId}`, {movieId, rating});\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getRatings = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/movies/rate/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}